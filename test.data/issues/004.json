{
	"description": "fails to parse complete base64",
	"base64": "Entropy
From Wikipedia, the free encyclopedia
This article is about entropy in thermodynamics. For other uses, see Entropy (disambiguation).
Not to be confused with Enthalpy.
For a more accessible and less technical introduction to this topic, see Introduction to entropy.
Thermodynamics
Carnot heat engine 2.svg
The classical Carnot heat engine
Branches
[show]
Laws
[show]
Systems
[show]
System properties
[hide]
Note: Conjugate variables in italics

    Property diagrams
    Intensive and extensive properties

Functions of state

    Temperature / Entropy (introduction)
    Pressure / Volume
    Chemical potential / Particle number
    Vapor quality
    Reduced properties

Process functions

    Work Heat 

Material properties
[show]
Equations
[show]
Potentials
[show]

    History Culture 

[show]
Scientists
[show]
Book:Thermodynamics

    v t e 

Entropy articles

    Introduction History Classical entropy Statistical entropy 

    v t e 

In statistical mechanics, entropy (usual symbol S) is related to the number of microscopic configurations Ω that a thermodynamic system can have when in a state as specified by some macroscopic variables. Specifically, assuming for simplicity that each of the microscopic configurations is equally probable, the entropy of the system is the natural logarithm of that number of configurations, multiplied by the Boltzmann constant kB. Formally,

    S = k B ln ⁡ Ω     (assuming equiprobable states) . {\displaystyle S=k_{\mathrm {B} }\ln \Omega ~~{\mbox{(assuming equiprobable states)}}.} {\displaystyle S=k_{\mathrm {B} }\ln \Omega ~~{\mbox{(assuming equiprobable states)}}.}

This is consistent with 19th century formulas for entropy in terms of heat and temperature, as discussed below. Boltzmann's constant, and therefore entropy, have dimensions of energy divided by temperature.

For example, gas in a container with known volume, pressure, and energy could have an enormous number of possible configurations of the collection of individual gas molecules. At equilibrium, each instantaneous configuration of the gas may be regarded as random. Entropy may be understood as a measure of disorder within a macroscopic system. The second law of thermodynamics states that an isolated system's entropy never decreases. Such systems spontaneously evolve towards thermodynamic equilibrium, the state with maximum entropy. Non-isolated systems may lose entropy, provided their environment's entropy increases by at least that amount. Since entropy is a function of the state of the system, a change in entropy of a system is determined by its initial and final states. This applies whether the process is reversible or irreversible. However, irreversible processes increase the combined entropy of the system and its environment.

In the mid-19th century, the change in entropy (ΔS) of a system undergoing a thermodynamically reversible process was defined by Rudolf Clausius as:

    Δ S = ∫ δ Q rev T {\displaystyle \Delta S=\int {\frac {\delta Q_{\text{rev}}}{T}}} {\displaystyle \Delta S=\int {\frac {\delta Q_{\text{rev}}}{T}}},

where T is the absolute temperature of the system, dividing an incremental reversible transfer of heat into that system (δQrev). (If heat is transferred out the sign would be reversed giving a decrease in entropy of the system.) The above definition is sometimes called the macroscopic definition of entropy because it can be used without regard to any microscopic description of the contents of a system. The concept of entropy has been found to be generally useful and has several other formulations. Entropy was discovered when it was noticed to be a quantity that behaves as a function of state, as a consequence of the second law of thermodynamics.

Entropy is an extensive property. It has the dimension of energy divided by temperature, which has a unit of joules per kelvin (J K−1) in the International System of Units (or kg m2 s−2 K−1 in terms of base units). But the entropy of a pure substance is usually given as an intensive property—either entropy per unit mass (SI unit: J K−1 kg−1) or entropy per unit amount of substance (SI unit: J K−1 mol−1).

The absolute entropy (S rather than ΔS) was defined later, using either statistical mechanics or the third law of thermodynamics, an otherwise arbitrary additive constant is fixed such that the entropy of a pure substance at absolute zero is zero. In statistical mechanics this reflects that the ground state of a system is generally non-degenerate and only one microscopic configuration corresponds to it.

In the modern microscopic interpretation of entropy in statistical mechanics, entropy is the amount of additional information needed to specify the exact physical state of a system, given its thermodynamic specification. Understanding the role of thermodynamic entropy in various processes requires an understanding of how and why that information changes as the system evolves from its initial to its final state. It is often said that entropy is an expression of the disorder, or randomness of a system, or of our lack of information about it. The second law is now often seen as an expression of the fundamental postulate of statistical mechanics through the modern definition of entropy.

Contents

    1 History
    2 Definitions and descriptions
        2.1 Function of state
        2.2 Reversible process
        2.3 Carnot cycle
        2.4 Classical thermodynamics
        2.5 Statistical mechanics
        2.6 Entropy of a system
    3 Second law of thermodynamics
    4 Applications
        4.1 The fundamental thermodynamic relation
        4.2 Entropy in chemical thermodynamics
        4.3 Entropy balance equation for open systems
    5 Entropy change formulas for simple processes
        5.1 Isothermal expansion or compression of an ideal gas
        5.2 Cooling and heating
        5.3 Phase transitions
    6 Approaches to understanding entropy
        6.1 Standard textbook definitions
        6.2 Order and disorder
        6.3 Energy dispersal
        6.4 Relating entropy to energy usefulness
        6.5 Entropy and adiabatic accessibility
        6.6 Entropy in quantum mechanics
        6.7 Information theory
    7 Interdisciplinary applications of entropy
        7.1 Thermodynamic and statistical mechanics concepts
        7.2 The arrow of time
        7.3 Cosmology
        7.4 Economics
    8 See also
    9 Notes
    10 References
    11 Further reading
    12 External links

History
Rudolf Clausius (1822–1888), originator of the concept of entropy
Main article: History of entropy

The French mathematician Lazare Carnot proposed in his 1803 paper Fundamental Principles of Equilibrium and Movement that in any machine the accelerations and shocks of the moving parts represent losses of moment of activity. In other words, in any natural process there exists an inherent tendency towards the dissipation of useful energy. Building on this work, in 1824 Lazare's son Sadi Carnot published Reflections on the Motive Power of Fire which posited that in all heat-engines, whenever "caloric" (what is now known as heat) falls through a temperature difference, work or motive power can be produced from the actions of its fall from a hot to cold body. He made the analogy with that of how water falls in a water wheel. This was an early insight into the second law of thermodynamics.[1] Carnot based his views of heat partially on the early 18th century "Newtonian hypothesis" that both heat and light were types of indestructible forms of matter, which are attracted and repelled by other matter, and partially on the contemporary views of Count Rumford who showed (1789) that heat could be created by friction as when cannon bores are machined.[2] Carnot reasoned that if the body of the working substance, such as a body of steam, is returned to its original state at the end of a complete engine cycle, that "no change occurs in the condition of the working body".

The first law of thermodynamics, deduced from the heat-friction experiments of James Joule in 1843, expresses the concept of energy, and its conservation in all processes; the first law, however, is unable to quantify the effects of friction and dissipation.

In the 1850s and 1860s, German physicist Rudolf Clausius objected to the supposition that no change occurs in the working body, and gave this "change" a mathematical interpretation by questioning the nature of the inherent loss of usable heat when work is done, e.g. heat produced by friction.[3] Clausius described entropy as the transformation-content, i.e. dissipative energy use, of a thermodynamic system or working body of chemical species during a change of state.[3] This was in contrast to earlier views, based on the theories of Isaac Newton, that heat was an indestructible particle that had mass.

Later, scientists such as Ludwig Boltzmann, Josiah Willard Gibbs, and James Clerk Maxwell gave entropy a statistical basis. In 1877 Boltzmann visualized a probabilistic way to measure the entropy of an ensemble of ideal gas particles, in which he defined entropy to be proportional to the logarithm of the number of microstates such a gas could occupy. Henceforth, the essential problem in statistical thermodynamics, i.e. according to Erwin Schrödinger, has been to determine the distribution of a given amount of energy E over N identical systems. Carathéodory linked entropy with a mathematical definition of irreversibility, in terms of trajectories and integrability.
Definitions and descriptions

Any method involving the notion of entropy, the very existence of which depends on the second law of thermodynamics, will doubtless seem to many far-fetched, and may repel beginners as obscure and difficult of comprehension.
Willard Gibbs, Graphical Methods in the Thermodynamics of Fluids[4]

There are two related definitions of entropy: the thermodynamic definition and the statistical mechanics definition. Historically, the classical thermodynamics definition developed first. In the classical thermodynamics viewpoint, the system is composed of very large numbers of constituents (atoms, molecules) and the state of the system is described by the average thermodynamic properties of those constituents; the details of the system's constituents are not directly considered, but their behavior is described by macroscopically averaged properties, e.g. temperature, pressure, entropy, heat capacity. The early classical definition of the properties of the system assumed equilibrium. The classical thermodynamic definition of entropy has more recently been extended into the area of non-equilibrium thermodynamics. Later, the thermodynamic properties, including entropy, were given an alternative definition in terms of the statistics of the motions of the microscopic constituents of a system — modeled at first classically, e.g. Newtonian particles constituting a gas, and later quantum-mechanically (photons, phonons, spins, etc.). The statistical mechanics description of the behavior of a system is necessary as the definition of the properties of a system using classical thermodynamics become an increasingly unreliable method of predicting the final state of a system that is subject to some process.
Function of state

There are many thermodynamic properties that are functions of state. This means that at a particular thermodynamic state (which should not be confused with the microscopic state of a system), these properties have a certain value. Often, if two properties of the system are determined, then the state is determined and the other properties' values can also be determined. For instance, a quantity of gas at a particular temperature and pressure has its state fixed by those values and thus has a specific volume that is determined by those values. As another instance, a system composed of a pure substance of a single phase at a particular uniform temperature and pressure is determined (and is thus a particular state) and is at not only a particular volume but also at a particular entropy.[5] The fact that entropy is a function of state is one reason it is useful. In the Carnot cycle, the working fluid returns to the same state it had at the start of the cycle, hence the line integral of any state function, such as entropy, over this reversible cycle is zero.
Reversible process

Entropy is conserved for a reversible process. A reversible process is one that does not deviate from thermodynamic equilibrium, while producing the maximum work. Any process which happens quickly enough to deviate from thermal equilibrium cannot be reversible. In these cases energy is lost to heat, total entropy increases, and the potential for maximum work to be done in the transition is also lost. More specifically, total entropy is conserved in a reversible process and not conserved in an irreversible process.[6] For example, in the Carnot cycle, while the heat flow from the hot reservoir to the cold reservoir represents an increase in entropy, the work output, if reversibly and perfectly stored in some energy storage mechanism, represents a decrease in entropy that could be used to operate the heat engine in reverse and return to the previous state, thus the total entropy change is still zero at all times if the entire process is reversible. An irreversible process increases entropy.[7]
Carnot cycle

The concept of entropy arose from Rudolf Clausius's study of the Carnot cycle.[8] In a Carnot cycle, heat QH is absorbed isothermally at temperature TH from a 'hot' reservoir and given up isothermally as heat QC to a 'cold' reservoir at TC. According to Carnot's principle, work can only be produced by the system when there is a temperature difference, and the work should be some function of the difference in temperature and the heat absorbed (QH). Carnot did not distinguish between QH and QC, since he was using the incorrect hypothesis that caloric theory was valid, and hence heat was conserved (the incorrect assumption that QH and QC were equal) when, in fact, QH is greater than QC.[9][10] Through the efforts of Clausius and Kelvin, it is now known that the maximum work that a heat engine can produce is the product of the Carnot efficiency and the heat absorbed from the hot reservoir:

    W = ( T H − T C T H ) Q H = ( 1 − T C T H ) Q H {\displaystyle W=\left({\frac {T_{H}-T_{C}}{T_{H}}}\right)Q_{H}=\left(1-{\frac {T_{C}}{T_{H}}}\right)Q_{H}} W=\left({\frac {T_{H}-T_{C}}{T_{H}}}\right)Q_{H}=\left(1-{\frac {T_{C}}{T_{H}}}\right)Q_{H}
    	

     
    	

     
    	

     

     
    	

    (1)

To derive the Carnot efficiency, which is 1-(TC/TH) (a number less than one), Kelvin had to evaluate the ratio of the work output to the heat absorbed during the isothermal expansion with the help of the Carnot-Clapeyron equation which contained an unknown function, known as the Carnot function. The possibility that the Carnot function could be the temperature as measured from a zero temperature, was suggested by Joule in a letter to Kelvin. This allowed Kelvin to establish his absolute temperature scale.[11] It is also known that the work produced by the system is the difference between the heat absorbed from the hot reservoir and the heat given up to the cold reservoir:

    W = Q H − Q C {\displaystyle W=Q_{H}-Q_{C}} W=Q_{H}-Q_{C}
    	

     
    	

     
    	

     

     
    	

    (2)

Since the latter is valid over the entire cycle, this gave Clausius the hint that at each stage of the cycle, work and heat would not be equal, but rather their difference would be a state function that would vanish upon completion of the cycle. The state function was called the internal energy and it became the first law of thermodynamics.[12]

Now equating (1) and (2) gives

    Q H T H − Q C T C = 0 {\displaystyle {\frac {Q_{H}}{T_{H}}}-{\frac {Q_{C}}{T_{C}}}=0} {\frac {Q_{H}}{T_{H}}}-{\frac {Q_{C}}{T_{C}}}=0

or

    Q H T H = Q C T C {\displaystyle {\frac {Q_{H}}{T_{H}}}={\frac {Q_{C}}{T_{C}}}} {\frac {Q_{H}}{T_{H}}}={\frac {Q_{C}}{T_{C}}}

This implies that there is a function of state which is conserved over a complete cycle of the Carnot cycle. Clausius called this state function entropy. One can see that entropy was discovered through mathematics rather than through laboratory results. It is a mathematical construct and has no easy physical analogy. This makes the concept somewhat obscure or abstract, akin to how the concept of energy arose.

Clausius then asked what would happen if there should be less work produced by the system than that predicted by Carnot's principle. The right-hand side of the first equation would be the upper bound of the work output by the system, which would now be converted into an inequality

    W < ( 1 − T C T H ) Q H {\displaystyle W<\left(1-{\frac {T_{C}}{T_{H}}}\right)Q_{H}} W<\left(1-{\frac {T_{C}}{T_{H}}}\right)Q_{H}

When the second equation is used to express the work as a difference in heats, we get

    Q H − Q C < ( 1 − T C T H ) Q H {\displaystyle Q_{H}-Q_{C}<\left(1-{\frac {T_{C}}{T_{H}}}\right)Q_{H}} Q_{H}-Q_{C}<\left(1-{\frac {T_{C}}{T_{H}}}\right)Q_{H}
    or
    Q C > T C T H Q H {\displaystyle Q_{C}>{\frac {T_{C}}{T_{H}}}Q_{H}} Q_{C}>{\frac {T_{C}}{T_{H}}}Q_{H}

So more heat is given up to the cold reservoir than in the Carnot cycle. If we denote the entropies by Si=Qi/Ti for the two states, then the above inequality can be written as a decrease in the entropy

    S H − S C < 0 {\displaystyle S_{H}-S_{C}<0} S_{H}-S_{C}<0
    or
    S H < S C {\displaystyle S_{H}<S_{C}} S_{H}<S_{C}

The entropy that leaves the system is greater than the entropy that enters the system, implying that some irreversible process prevents the cycle from producing the maximum amount of work predicted by the Carnot equation.

The Carnot cycle and efficiency are useful because they define the upper bound of the possible work output and the efficiency of any classical thermodynamic system. Other cycles, such as the Otto cycle, Diesel cycle and Brayton cycle, can be analyzed from the standpoint of the Carnot cycle. Any machine or process that converts heat to work and is claimed to produce an efficiency greater than the Carnot efficiency is not viable because it violates the second law of thermodynamics. For very small numbers of particles in the system, statistical thermodynamics must be used. The efficiency of devices such as photovoltaic cells require an analysis from the standpoint of quantum mechanics.
Classical thermodynamics
Main article: Entropy (classical thermodynamics)
Conjugate variables
of thermodynamics
Pressure 	Volume
(Stress) 	(Strain)
Temperature 	Entropy
Chemical potential 	Particle number

The thermodynamic definition of entropy was developed in the early 1850s by Rudolf Clausius and essentially describes how to measure the entropy of an isolated system in thermodynamic equilibrium with its parts. Clausius created the term entropy as an extensive thermodynamic variable that was shown to be useful in characterizing the Carnot cycle. Heat transfer along the isotherm steps of the Carnot cycle was found to be proportional to the temperature of a system (known as its absolute temperature). This relationship was expressed in increments of entropy equal to the ratio of incremental heat transfer divided by temperature, which was found to vary in the thermodynamic cycle but eventually return to the same value at the end of every cycle. Thus it was found to be a function of state, specifically a thermodynamic state of the system. Clausius wrote that he "intentionally formed the word Entropy as similar as possible to the word Energy", basing the term on the Greek ἡ τροπή tropē, "transformation".[13][note 1]

While Clausius based his definition on a reversible process, there are also irreversible processes that change entropy. Following the second law of thermodynamics, entropy of an isolated system always increases. The difference between an isolated system and closed system is that heat may not flow to and from an isolated system, but heat flow to and from a closed system is possible. Nevertheless, for both closed and isolated systems, and indeed, also in open systems, irreversible thermodynamics processes may occur.

According to the Clausius equality, for a reversible cyclic process: ∮ δ Q rev T = 0. {\displaystyle \oint {\frac {\delta Q_{\text{rev}}}{T}}=0.} \oint {\frac {\delta Q_{\text{rev}}}{T}}=0. This means the line integral ∫ L δ Q rev T {\displaystyle \int _{L}{\frac {\delta Q_{\text{rev}}}{T}}} \int _{L}{\frac {\delta Q_{\text{rev}}}{T}} is path-independent.

So we can define a state function S called entropy, which satisfies d S = δ Q rev T . {\displaystyle dS={\frac {\delta Q_{\text{rev}}}{T}}.} dS={\frac {\delta Q_{\text{rev}}}{T}}.

To find the entropy difference between any two states of a system, the integral must be evaluated for some reversible path between the initial and final states.[14] Since entropy is a state function, the entropy change of the system for an irreversible path is the same as for a reversible path between the same two states.[15] However, the entropy change of the surroundings will be different.

We can only obtain the change of entropy by integrating the above formula. To obtain the absolute value of the entropy, we need the third law of thermodynamics, which states that S = 0 at absolute zero for perfect crystals.

From a macroscopic perspective, in classical thermodynamics the entropy is interpreted as a state function of a thermodynamic system: that is, a property depending only on the current state of the system, independent of how that state came to be achieved. In any process where the system gives up energy ΔE, and its entropy falls by ΔS, a quantity at least TR ΔS of that energy must be given up to the system's surroundings as unusable heat (TR is the temperature of the system's external surroundings). Otherwise the process cannot go forward. In classical thermodynamics, the entropy of a system is defined only if it is in thermodynamic equilibrium.
Statistical mechanics

The statistical definition was developed by Ludwig Boltzmann in the 1870s by analyzing the statistical behavior of the microscopic components of the system. Boltzmann showed that this definition of entropy was equivalent to the thermodynamic entropy to within a constant number which has since been known as Boltzmann's constant. In summary, the thermodynamic definition of entropy provides the experimental definition of entropy, while the statistical definition of entropy extends the concept, providing an explanation and a deeper understanding of its nature.

The interpretation of entropy in statistical mechanics is the measure of uncertainty, or mixedupness in the phrase of Gibbs, which remains about a system after its observable macroscopic properties, such as temperature, pressure and volume, have been taken into account. For a given set of macroscopic variables, the entropy measures the degree to which the probability of the system is spread out over different possible microstates. In contrast to the macrostate, which characterizes plainly observable average quantities, a microstate specifies all molecular details about the system including the position and velocity of every molecule. The more such states available to the system with appreciable probability, the greater the entropy. In statistical mechanics, entropy is a measure of the number of ways in which a system may be arranged, often taken to be a measure of "disorder" (the higher the entropy, the higher the disorder).[16][17][18] This definition describes the entropy as being proportional to the natural logarithm of the number of possible microscopic configurations of the individual atoms and molecules of the system (microstates) which could give rise to the observed macroscopic state (macrostate) of the system. The constant of proportionality is the Boltzmann constant.

Specifically, entropy is a logarithmic measure of the number of states with significant probability of being occupied:

    S = − k B ∑ i p i log ⁡ p i , {\displaystyle S=-k_{\mathrm {B} }\sum _{i}p_{i}\log p_{i},} {\displaystyle S=-k_{\mathrm {B} }\sum _{i}p_{i}\log p_{i},}

or, equivalently, the expected value of the logarithm of the probability that a microstate will be occupied

    S = − k B E i ( log ⁡ p i ) {\displaystyle S=-k_{\mathrm {B} }\mathbb {E} _{i}(\log p_{i})} {\displaystyle S=-k_{\mathrm {B} }\mathbb {E} _{i}(\log p_{i})}

where kB is the Boltzmann constant, equal to 1.38065×10−23 J/K. The summation is over all the possible microstates of the system, and pi is the probability that the system is in the i-th microstate.[19] This definition assumes that the basis set of states has been picked so that there is no information on their relative phases. In a different basis set, the more general expression is

    S = − k B Tr ( ρ ^ log ⁡ ( ρ ^ ) ) , {\displaystyle S=-k_{\mathrm {B} }{\text{Tr}}\,({\widehat {\rho }}\log({\widehat {\rho }})),} {\displaystyle S=-k_{\mathrm {B} }{\text{Tr}}\,({\widehat {\rho }}\log({\widehat {\rho }})),}

where ρ ^ {\displaystyle {\widehat {\rho }}} {\widehat {\rho }} is the density matrix, Tr {\displaystyle {\text{Tr}}} {\text{Tr}} is trace (linear algebra) and log {\displaystyle \log } \log is the matrix logarithm. This density matrix formulation is not needed in cases of thermal equilibrium so long as the basis states are chosen to be energy eigenstates. For most practical purposes, this can be taken as the fundamental definition of entropy since all other formulas for S can be mathematically derived from it, but not vice versa.

In what has been called the fundamental assumption of statistical thermodynamics or the fundamental postulate in statistical mechanics, the occupation of any microstate is assumed to be equally probable (i.e. pi = 1/Ω, where Ω is the number of microstates); this assumption is usually justified for an isolated system in equilibrium.[20] Then the previous equation reduces to

    S = k B log ⁡ Ω . {\displaystyle S=k_{\mathrm {B} }\log \Omega .} {\displaystyle S=k_{\mathrm {B} }\log \Omega .}

In thermodynamics, such a system is one in which the volume, number of molecules, and internal energy are fixed (the microcanonical ensemble).

The most general interpretation of entropy is as a measure of our uncertainty about a system. The equilibrium state of a system maximizes the entropy because we have lost all information about the initial conditions except for the conserved variables; maximizing the entropy maximizes our ignorance about the details of the system.[21] This uncertainty is not of the everyday subjective kind, but rather the uncertainty inherent to the experimental method and interpretative model.

The interpretative model has a central role in determining entropy. The qualifier "for a given set of macroscopic variables" above has deep implications: if two observers use different sets of macroscopic variables, they see different entropies. For example, if observer A uses the variables U, V and W, and observer B uses U, V, W, X, then, by changing X, observer B can cause an effect that looks like a violation of the second law of thermodynamics to observer A. In other words: the set of macroscopic variables one chooses must include everything that may change in the experiment, otherwise one might see decreasing entropy![22]

Entropy can be defined for any Markov processes with reversible dynamics and the detailed balance property.

In Boltzmann's 1896 Lectures on Gas Theory, he showed that this expression gives a measure of entropy for systems of atoms and molecules in the gas phase, thus providing a measure for the entropy of classical thermodynamics.
Entropy of a system
A thermodynamic system
A temperature–entropy diagram for steam. The vertical axis represents uniform temperature, and the horizontal axis represents specific entropy. Each dark line on the graph represents constant pressure, and these form a mesh with light gray lines of constant volume. (Dark-blue is liquid water, light-blue is liquid-steam mixture, and faint-blue is steam. Grey-blue represents supercritical liquid water.)

Entropy is the above-mentioned unexpected and, to some, obscure integral that arises directly from the Carnot cycle. It is reversible heat divided by temperature. It is also, remarkably, a fundamental and very useful function of state.

In a thermodynamic system, pressure, density, and temperature tend to become uniform over time because this equilibrium state has higher probability (more possible combinations of microstates) than any other; see statistical mechanics. As an example, for a glass of ice water in air at room temperature, the difference in temperature between a warm room (the surroundings) and cold glass of ice and water (the system and not part of the room), begins to be equalized as portions of the thermal energy from the warm surroundings spread to the cooler system of ice and water. Over time the temperature of the glass and its contents and the temperature of the room become equal. The entropy of the room has decreased as some of its energy has been dispersed to the ice and water. However, as calculated in the example, the entropy of the system of ice and water has increased more than the entropy of the surrounding room has decreased. In an isolated system such as the room and ice water taken together, the dispersal of energy from warmer to cooler always results in a net increase in entropy. Thus, when the "universe" of the room and ice water system has reached a temperature equilibrium, the entropy change from the initial state is at a maximum. The entropy of the thermodynamic system is a measure of how far the equalization has progressed.

Thermodynamic entropy is a non-conserved state function that is of great importance in the sciences of physics and chemistry.[16][23] Historically, the concept of entropy evolved to explain why some processes (permitted by conservation laws) occur spontaneously while their time reversals (also permitted by conservation laws) do not; systems tend to progress in the direction of increasing entropy.[24][25] For isolated systems, entropy never decreases.[23] This fact has several important consequences in science: first, it prohibits "perpetual motion" machines; and second, it implies the arrow of entropy has the same direction as the arrow of time. Increases in entropy correspond to irreversible changes in a system, because some energy is expended as waste heat, limiting the amount of work a system can do.[16][17][26][27]

Unlike many other functions of state, entropy cannot be directly observed but must be calculated. Entropy can be calculated for a substance as the standard molar entropy from absolute zero (also known as absolute entropy) or as a difference in entropy from some other reference state which is defined as zero entropy. Entropy has the dimension of energy divided by temperature, which has a unit of joules per kelvin (J/K) in the International System of Units. While these are the same units as heat capacity, the two concepts are distinct.[28] Entropy is not a conserved quantity: for example, in an isolated system with non-uniform temperature, heat might irreversibly flow and the temperature become more uniform such that entropy increases. The second law of thermodynamics states that a closed system has entropy which may increase or otherwise remain constant. Chemical reactions cause changes in entropy and entropy plays an important role in determining in which direction a chemical reaction spontaneously proceeds.

One dictionary definition of entropy is that it is "a measure of thermal energy per unit temperature that is not available for useful work". For instance, a substance at uniform temperature is at maximum entropy and cannot drive a heat engine. A substance at non-uniform temperature is at a lower entropy (than if the heat distribution is allowed to even out) and some of the thermal energy can drive a heat engine.

A special case of entropy increase, the entropy of mixing, occurs when two or more different substances are mixed. If the substances are at the same temperature and pressure, there is no net exchange of heat or work – the entropy change is entirely due to the mixing of the different substances. At a statistical mechanical level, this results due to the change in available volume per particle with mixing.[29]
Second law of thermodynamics
Main article: Second law of thermodynamics
See also: Thermodynamic Equilibrium and Non-equilibrium thermodynamics

The second law of thermodynamics requires that, in general, the total entropy of any system can't decrease other than by increasing the entropy of some other system. Hence, in a system isolated from its environment, the entropy of that system tends not to decrease. It follows that heat can't flow from a colder body to a hotter body without the application of work (the imposition of order) to the colder body. Secondly, it is impossible for any device operating on a cycle to produce net work from a single temperature reservoir; the production of net work requires flow of heat from a hotter reservoir to a colder reservoir, or a single expanding reservoir undergoing adiabatic cooling, which performs adiabatic work. As a result, there is no possibility of a perpetual motion system. It follows that a reduction in the increase of entropy in a specified process, such as a chemical reaction, means that it is energetically more efficient.

It follows from the second law of thermodynamics that the entropy of a system that is not isolated may decrease. An air conditioner, for example, may cool the air in a room, thus reducing the entropy of the air of that system. The heat expelled from the room (the system), which the air conditioner transports and discharges to the outside air, always makes a bigger contribution to the entropy of the environment than the decrease of the entropy of the air of that system. Thus, the total of entropy of the room plus the entropy of the environment increases, in agreement with the second law of thermodynamics.

In mechanics, the second law in conjunction with the fundamental thermodynamic relation places limits on a system's ability to do useful work.[30] The entropy change of a system at temperature T absorbing an infinitesimal amount of heat δq in a reversible way, is given by δq/T. More explicitly, an energy TR S is not available to do useful work, where TR is the temperature of the coldest accessible reservoir or heat sink external to the system. For further discussion, see Exergy.

Statistical mechanics demonstrates that entropy is governed by probability, thus allowing for a decrease in disorder even in an isolated system. Although this is possible, such an event has a small probability of occurring, making it unlikely.[31]

The applicability of a second law of thermodynamics is a limited to systems which are near or in equilibrium state.[32] At the same time, laws governing systems which are far from equilibrium are still debatable. One of the guiding principles for such systems is the maximum entropy production principle.[33][34] It claims that a non-equilibrium systems evolves such as to maximize its entropy production.[35][36]
Applications
The fundamental thermodynamic relation
Main article: Fundamental thermodynamic relation

The entropy of a system depends on its internal energy and its external parameters, such as its volume. In the thermodynamic limit, this fact leads to an equation relating the change in the internal energy U to changes in the entropy and the external parameters. This relation is known as the fundamental thermodynamic relation. If external pressure P bears on the volume V as the only external parameter, this relation is:

    d U = T d S − p d V {\displaystyle dU=TdS-pdV} {\displaystyle dU=TdS-pdV}

Since both internal energy and entropy are monotonic functions of temperature T, implying that the internal energy is fixed when one specifies the entropy and the volume, this relation is valid even if the change from one state of thermal equilibrium to another with infinitesimally larger entropy and volume happens in a non-quasistatic way (so during this change the system may be very far out of thermal equilibrium and then the entropy, pressure and temperature may not exist).

The fundamental thermodynamic relation implies many thermodynamic identities that are valid in general, independent of the microscopic details of the system. Important examples are the Maxwell relations and the relations between heat capacities.
Entropy in chemical thermodynamics

Thermodynamic entropy is central in chemical thermodynamics, enabling changes to be quantified and the outcome of reactions predicted. The second law of thermodynamics states that entropy in an isolated system – the combination of a subsystem under study and its surroundings – increases during all spontaneous chemical and physical processes. The Clausius equation of δqrev/T = ΔS introduces the measurement of entropy change, ΔS. Entropy change describes the direction and quantifies the magnitude of simple changes such as heat transfer between systems – always from hotter to cooler spontaneously.

The thermodynamic entropy therefore has the dimension of energy divided by temperature, and the unit joule per kelvin (J/K) in the International System of Units (SI).

Thermodynamic entropy is an extensive property, meaning that it scales with the size or extent of a system. In many processes it is useful to specify the entropy as an intensive property independent of the size, as a specific entropy characteristic of the type of system studied. Specific entropy may be expressed relative to a unit of mass, typically the kilogram (unit: Jkg−1K−1). Alternatively, in chemistry, it is also referred to one mole of substance, in which case it is called the molar entropy with a unit of Jmol−1K−1.

Thus, when one mole of substance at about 0K is warmed by its surroundings to 298K, the sum of the incremental values of qrev/T constitute each element's or compound's standard molar entropy, an indicator of the amount of energy stored by a substance at 298K.[37][38] Entropy change also measures the mixing of substances as a summation of their relative quantities in the final mixture.[39]

Entropy is equally essential in predicting the extent and direction of complex chemical reactions. For such applications, ΔS must be incorporated in an expression that includes both the system and its surroundings, ΔSuniverse = ΔSsurroundings + ΔS system. This expression becomes, via some steps, the Gibbs free energy equation for reactants and products in the system: ΔG [the Gibbs free energy change of the system] = ΔH [the enthalpy change] −T ΔS [the entropy change].[37]
Entropy balance equation for open systems
During steady-state continuous operation, an entropy balance applied to an open system accounts for system entropy changes related to heat flow and mass flow across the system boundary.

In chemical engineering, the principles of thermodynamics are commonly applied to "open systems", i.e. those in which heat, work, and mass flow across the system boundary. Flows of both heat ( Q ˙ {\displaystyle {\dot {Q}}} {\dot {Q}}) and work, i.e. W ˙ S {\displaystyle {\dot {W}}_{S}} {\dot {W}}_{S} (shaft work) and P(dV/dt) (pressure-volume work), across the system boundaries, in general cause changes in the entropy of the system. Transfer as heat entails entropy transfer Q ˙ / T , {\displaystyle {\dot {Q}}/T,} {\dot {Q}}/T, where T is the absolute thermodynamic temperature of the system at the point of the heat flow. If there are mass flows across the system boundaries, they also influence the total entropy of the system. This account, in terms of heat and work, is valid only for cases in which the work and heat transfers are by paths physically distinct from the paths of entry and exit of matter from the system.[40][41]

To derive a generalized entropy balanced equation, we start with the general balance equation for the change in any extensive quantity Θ in a thermodynamic system, a quantity that may be either conserved, such as energy, or non-conserved, such as entropy. The basic generic balance expression states that dΘ/dt, i.e. the rate of change of Θ in the system, equals the rate at which Θ enters the system at the boundaries, minus the rate at which Θ leaves the system across the system boundaries, plus the rate at which Θ is generated within the system. For an open thermodynamic system in which heat and work are transferred by paths separate from the paths for transfer of matter, using this generic balance equation, with respect to the rate of change with time t of the extensive quantity entropy S, the entropy balance equation is:[42][note 2]

    d S d t = ∑ k = 1 K M ˙ k S ^ k + Q ˙ T + S ˙ g e n {\displaystyle {\frac {dS}{dt}}=\sum _{k=1}^{K}{\dot {M}}_{k}{\hat {S}}_{k}+{\frac {\dot {Q}}{T}}+{\dot {S}}_{gen}} {\frac {dS}{dt}}=\sum _{k=1}^{K}{\dot {M}}_{k}{\hat {S}}_{k}+{\frac {\dot {Q}}{T}}+{\dot {S}}_{gen}

where

    ∑ k = 1 K M ˙ k S ^ k {\displaystyle \sum _{k=1}^{K}{\dot {M}}_{k}{\hat {S}}_{k}} \sum _{k=1}^{K}{\dot {M}}_{k}{\hat {S}}_{k} = the net rate of entropy flow due to the flows of mass into and out of the system (where S ^ {\displaystyle {\hat {S}}} {\hat {S}} = entropy per unit mass).
    Q ˙ T {\displaystyle {\frac {\dot {Q}}{T}}} {\frac {\dot {Q}}{T}} = the rate of entropy flow due to the flow of heat across the system boundary.
    S ˙ g e n {\displaystyle {\dot {S}}_{gen}} {\dot {S}}_{gen} = the rate of entropy production within the system. This entropy production arises from processes within the system, including chemical reactions, internal matter diffusion, internal heat transfer, and frictional effects such as viscosity occurring within the system from mechanical work transfer to or from the system.

Note, also, that if there are multiple heat flows, the term Q ˙ / T {\displaystyle {\dot {Q}}/T} {\dot {Q}}/T is replaced by ∑ Q ˙ j / T j , {\displaystyle \sum {\dot {Q}}_{j}/T_{j},} \sum {\dot {Q}}_{j}/T_{j}, where Q ˙ j {\displaystyle {\dot {Q}}_{j}} {\dot {Q}}_{j} is the heat flow and T j {\displaystyle T_{j}} T_{j} is the temperature at the jth heat flow port into the system.
Entropy change formulas for simple processes

For certain simple transformations in systems of constant composition, the entropy changes are given by simple formulas.[43]
Isothermal expansion or compression of an ideal gas

For the expansion (or compression) of an ideal gas from an initial volume V 0 {\displaystyle V_{0}} V_{0} and pressure P 0 {\displaystyle P_{0}} P_{0} to a final volume V {\displaystyle V} V and pressure P {\displaystyle P} P at any constant temperature, the change in entropy is given by:

    Δ S = n R ln ⁡ V V 0 = − n R ln ⁡ P P 0 . {\displaystyle \Delta S=nR\ln {\frac {V}{V_{0}}}=-nR\ln {\frac {P}{P_{0}}}.} \Delta S=nR\ln {\frac {V}{V_{0}}}=-nR\ln {\frac {P}{P_{0}}}.

Here n {\displaystyle n} n is the number of moles of gas and R {\displaystyle R} R is the ideal gas constant. These equations also apply for expansion into a finite vacuum or a throttling process, where the temperature, internal energy and enthalpy for an ideal gas remain constant.
Cooling and heating

For heating or cooling of any system (gas, liquid or solid) at constant pressure from an initial temperature T 0 {\displaystyle T_{0}} T_{0} to a final temperature T {\displaystyle T} T, the entropy change is

    Δ S = n C P ln ⁡ T T 0 {\displaystyle \Delta S=nC_{P}\ln {\frac {T}{T_{0}}}} \Delta S=nC_{P}\ln {\frac {T}{T_{0}}}.

provided that the constant-pressure molar heat capacity (or specific heat) CP is constant and that no phase transition occurs in this temperature interval.

Similarly at constant volume, the entropy change is

    Δ S = n C v ln ⁡ T T 0 {\displaystyle \Delta S=nC_{v}\ln {\frac {T}{T_{0}}}} \Delta S=nC_{v}\ln {\frac {T}{T_{0}}},

where the constant-volume heat capacity Cv is constant and there is no phase change.

At low temperatures near absolute zero, heat capacities of solids quickly drop off to near zero, so the assumption of constant heat capacity does not apply.[44]

Since entropy is a state function, the entropy change of any process in which temperature and volume both vary is the same as for a path divided into two steps – heating at constant volume and expansion at constant temperature. For an ideal gas, the total entropy change is[45]

    Δ S = n C v ln ⁡ T T 0 + n R ln ⁡ V V 0 {\displaystyle \Delta S=nC_{v}\ln {\frac {T}{T_{0}}}+nR\ln {\frac {V}{V_{0}}}} \Delta S=nC_{v}\ln {\frac {T}{T_{0}}}+nR\ln {\frac {V}{V_{0}}}.

Similarly if the temperature and pressure of an ideal gas both vary,

    Δ S = n C P ln ⁡ T T 0 − n R ln ⁡ P P 0 {\displaystyle \Delta S=nC_{P}\ln {\frac {T}{T_{0}}}-nR\ln {\frac {P}{P_{0}}}} \Delta S=nC_{P}\ln {\frac {T}{T_{0}}}-nR\ln {\frac {P}{P_{0}}}.

Phase transitions

Reversible phase transitions occur at constant temperature and pressure. The reversible heat is the enthalpy change for the transition, and the entropy change is the enthalpy change divided by the thermodynamic temperature. For fusion (melting) of a solid to a liquid at the melting point Tm, the entropy of fusion is

    Δ S fus = Δ H fus T m . {\displaystyle \Delta S_{\text{fus}}={\frac {\Delta H_{\text{fus}}}{T_{\text{m}}}}.} \Delta S_{\text{fus}}={\frac {\Delta H_{\text{fus}}}{T_{\text{m}}}}.

Similarly, for vaporization of a liquid to a gas at the boiling point Tb, the entropy of vaporization is

    Δ S vap = Δ H vap T b . {\displaystyle \Delta S_{\text{vap}}={\frac {\Delta H_{\text{vap}}}{T_{\text{b}}}}.} \Delta S_{\text{vap}}={\frac {\Delta H_{\text{vap}}}{T_{\text{b}}}}.

Approaches to understanding entropy

As a fundamental aspect of thermodynamics and physics, several different approaches to entropy beyond that of Clausius and Boltzmann are valid.
Standard textbook definitions

The following is a list of additional definitions of entropy from a collection of textbooks:

    a measure of energy dispersal at a specific temperature.
    a measure of disorder in the universe or of the availability of the energy in a system to do work.[46]
    a measure of a system's thermal energy per unit temperature that is unavailable for doing useful work.[47]

In Boltzmann's definition, entropy is a measure of the number of possible microscopic states (or microstates) of a system in thermodynamic equilibrium. Consistent with the Boltzmann definition, the second law of thermodynamics needs to be re-worded as such that entropy increases over time, though the underlying principle remains the same.
Order and disorder
Main article: Entropy (order and disorder)

Entropy has often been loosely associated with the amount of order or disorder, or of chaos, in a thermodynamic system. The traditional qualitative description of entropy is that it refers to changes in the status quo of the system and is a measure of "molecular disorder" and the amount of wasted energy in a dynamical energy transformation from one state or form to another. In this direction, several recent authors have derived exact entropy formulas to account for and measure disorder and order in atomic and molecular assemblies.[48][49][50] One of the simpler entropy order/disorder formulas is that derived in 1984 by thermodynamic physicist Peter Landsberg, based on a combination of thermodynamics and information theory arguments. He argues that when constraints operate on a system, such that it is prevented from entering one or more of its possible or permitted states, as contrasted with its forbidden states, the measure of the total amount of "disorder" in the system is given by:[49][50]

    Disorder = C D C I . {\displaystyle {\mbox{Disorder}}={C_{D} \over C_{I}}.\,} {\mbox{Disorder}}={C_{D} \over C_{I}}.\,

Similarly, the total amount of "order" in the system is given by:

    Order = 1 − C O C I . {\displaystyle {\mbox{Order}}=1-{C_{O} \over C_{I}}.\,} {\mbox{Order}}=1-{C_{O} \over C_{I}}.\,

In which CD is the "disorder" capacity of the system, which is the entropy of the parts contained in the permitted ensemble, CI is the "information" capacity of the system, an expression similar to Shannon's channel capacity, and CO is the "order" capacity of the system.[48]
Energy dispersal
Main article: Entropy (energy dispersal)

The concept of entropy can be described qualitatively as a measure of energy dispersal at a specific temperature.[51] Similar terms have been in use from early in the history of classical thermodynamics, and with the development of statistical thermodynamics and quantum theory, entropy changes have been described in terms of the mixing or "spreading" of the total energy of each constituent of a system over its particular quantized energy levels.

Ambiguities in the terms disorder and chaos, which usually have meanings directly opposed to equilibrium, contribute to widespread confusion and hamper comprehension of entropy for most students.[52] As the second law of thermodynamics shows, in an isolated system internal portions at different temperatures tend to adjust to a single uniform temperature and thus produce equilibrium. A recently developed educational approach avoids ambiguous terms and describes such spreading out of energy as dispersal, which leads to loss of the differentials required for work even though the total energy remains constant in accordance with the first law of thermodynamics[53] (compare discussion in next section). Physical chemist Peter Atkins, for example, who previously wrote of dispersal leading to a disordered state, now writes that "spontaneous changes are always accompanied by a dispersal of energy".[54]
Relating entropy to energy usefulness

Following on from the above, it is possible (in a thermal context) to regard entropy as an indicator or measure of the effectiveness or usefulness of a particular quantity of energy.[55] This is because energy supplied at a high temperature (i.e. with low entropy) tends to be more useful than the same amount of energy available at room temperature. Mixing a hot parcel of a fluid with a cold one produces a parcel of intermediate temperature, in which the overall increase in entropy represents a "loss" which can never be replaced.

Thus, the fact that the entropy of the universe is steadily increasing, means that its total energy is becoming less useful: eventually, this will lead to the "heat death of the Universe".[56]
Entropy and adiabatic accessibility

A definition of entropy based entirely on the relation of adiabatic accessibility between equilibrium states was given by E.H.Lieb and J. Yngvason in 1999.[57] This approach has several predecessors, including the pioneering work of Constantin Carathéodory from 1909[58] and the monograph by R. Giles.[59] In the setting of Lieb and Yngvason one starts by picking, for a unit amount of the substance under consideration, two reference states X 0 {\displaystyle X_{0}} X_{0} and X 1 {\displaystyle X_{1}} X_{1} such that the latter is adiabatically accessible from the former but not vice versa. Defining the entropies of the reference states to be 0 and 1 respectively the entropy of a state X {\displaystyle X} X is defined as the largest number λ {\displaystyle \lambda } \lambda such that X {\displaystyle X} X is adiabatically accessible from a composite state consisting of an amount λ {\displaystyle \lambda } \lambda in the state X 1 {\displaystyle X_{1}} X_{1} and a complementary amount, ( 1 − λ ) {\displaystyle (1-\lambda )} (1-\lambda ), in the state X 0 {\displaystyle X_{0}} X_{0}. A simple but important result within this setting is that entropy is uniquely determined, apart from a choice of unit and an additive constant for each chemical element, by the following properties: It is monotonic with respect to the relation of adiabatic accessibility, additive on composite systems, and extensive under scaling.
Entropy in quantum mechanics
Main article: von Neumann entropy

In quantum statistical mechanics, the concept of entropy was developed by John von Neumann and is generally referred to as "von Neumann entropy",

    S = − k B T r ( ρ log ⁡ ρ ) {\displaystyle S=-k_{\mathrm {B} }\mathrm {Tr} (\rho \log \rho )\!} S=-k_{\mathrm {B} }\mathrm {Tr} (\rho \log \rho )\!

where ρ is the density matrix and Tr is the trace operator.

This upholds the correspondence principle, because in the classical limit, when the phases between the basis states used for the classical probabilities are purely random, this expression is equivalent to the familiar classical definition of entropy,

    S = − k B ∑ i p i log p i {\displaystyle S=-k_{\mathrm {B} }\sum _{i}p_{i}\,\log \,p_{i}} S=-k_{\mathrm {B} }\sum _{i}p_{i}\,\log \,p_{i},

i.e. in such a basis the density matrix is diagonal.

Von Neumann established a rigorous mathematical framework for quantum mechanics with his work Mathematische Grundlagen der Quantenmechanik. He provided in this work a theory of measurement, where the usual notion of wave function collapse is described as an irreversible process (the so-called von Neumann or projective measurement). Using this concept, in conjunction with the density matrix he extended the classical concept of entropy into the quantum domain.
Information theory

I thought of calling it "information", but the word was overly used, so I decided to call it "uncertainty". [...] Von Neumann told me, "You should call it entropy, for two reasons. In the first place your uncertainty function has been used in statistical mechanics under that name, so it already has a name. In the second place, and more important, nobody knows what entropy really is, so in a debate you will always have the advantage."
Conversation between Claude Shannon and John von Neumann regarding what name to give to the attenuation in phone-line signals[60]
Main articles: Entropy (information theory), Entropy in thermodynamics and information theory, and Entropic uncertainty

When viewed in terms of information theory, the entropy state function is simply the amount of information (in the Shannon sense) that would be needed to specify the full microstate of the system. This is left unspecified by the macroscopic description.

In information theory, entropy is the measure of the amount of information that is missing before reception and is sometimes referred to as Shannon entropy.[61] Shannon entropy is a broad and general concept which finds applications in information theory as well as thermodynamics. It was originally devised by Claude Shannon in 1948 to study the amount of information in a transmitted message. The definition of the information entropy is, however, quite general, and is expressed in terms of a discrete set of probabilities pi so that

    H ( X ) = − ∑ i = 1 n p ( x i ) log ⁡ p ( x i ) . {\displaystyle H(X)=-\sum _{i=1}^{n}p(x_{i})\log p(x_{i}).} H(X)=-\sum _{i=1}^{n}p(x_{i})\log p(x_{i}).

In the case of transmitted messages, these probabilities were the probabilities that a particular message was actually transmitted, and the entropy of the message system was a measure of the average amount of information in a message. For the case of equal probabilities (i.e. each message is equally probable), the Shannon entropy (in bits) is just the number of yes/no questions needed to determine the content of the message.[19]

The question of the link between information entropy and thermodynamic entropy is a debated topic. While most authors argue that there is a link between the two,[62][63][64][65][66] a few argue that they have nothing to do with each other.[19]

The expressions for the two entropies are similar. If W is the number of microstates that can yield a given macrostate, and each microstate has the same a priori probability, then that probability is p=1/W. The Shannon entropy (in nats) is:

    H = − ∑ i = 1 W p log ⁡ ( p ) = log ⁡ ( W ) {\displaystyle H=-\sum _{i=1}^{W}p\log(p)=\log(W)} H=-\sum _{i=1}^{W}p\log(p)=\log(W)

and if entropy is measured in units of k per nat, then the entropy is given[67] by:

    H = k log ⁡ ( W ) {\displaystyle H=k\,\log(W)} H=k\,\log(W)

which is the famous Boltzmann entropy formula when k is Boltzmann's constant, which may be interpreted as the thermodynamic entropy per nat. There are many ways of demonstrating the equivalence of "information entropy" and "physics entropy", that is, the equivalence of "Shannon entropy" and "Boltzmann entropy". Nevertheless, some authors argue for dropping the word entropy for the H function of information theory and using Shannon's other term "uncertainty" instead.[68]
Interdisciplinary applications of entropy

Although the concept of entropy was originally a thermodynamic construct, it has been adapted in other fields of study, including information theory, psychodynamics, thermoeconomics/ecological economics, and evolution.[69][70][71][72][73] For instance, an entropic argument has been recently proposed for explaining the preference of cave spiders in choosing a suitable area for laying their eggs.[74]
Thermodynamic and statistical mechanics concepts

    Entropy unit – a non-S.I. unit of thermodynamic entropy, usually denoted "e.u." and equal to one calorie per Kelvin per mole, or 4.184 Joules per Kelvin per mole.[75]
    Gibbs entropy – the usual statistical mechanical entropy of a thermodynamic system.
    Boltzmann entropy – a type of Gibbs entropy, which neglects internal statistical correlations in the overall particle distribution.
    Tsallis entropy – a generalization of the standard Boltzmann-Gibbs entropy.
    Standard molar entropy – is the entropy content of one mole of substance, under conditions of standard temperature and pressure.
    Residual entropy – the entropy present after a substance is cooled arbitrarily close to absolute zero.
    Entropy of mixing – the change in the entropy when two different chemical substances or components are mixed.
    Loop entropy – is the entropy lost upon bringing together two residues of a polymer within a prescribed distance.
    Conformational entropy – is the entropy associated with the physical arrangement of a polymer chain that assumes a compact or globular state in solution.
    Entropic force – a microscopic force or reaction tendency related to system organization changes, molecular frictional considerations, and statistical variations.
    Free entropy – an entropic thermodynamic potential analogous to the free energy.
    Entropic explosion – an explosion in which the reactants undergo a large change in volume without releasing a large amount of heat.
    Entropy change – a change in entropy dS between two equilibrium states is given by the heat transferred dQrev divided by the absolute temperature T of the system in this interval.
    Sackur-Tetrode entropy – the entropy of a monatomic classical ideal gas determined via quantum considerations.

The arrow of time
Main article: Entropy (arrow of time)

Entropy is the only quantity in the physical sciences that seems to imply a particular direction of progress, sometimes called an arrow of time. As time progresses, the second law of thermodynamics states that the entropy of an isolated system never decreases. Hence, from this perspective, entropy measurement is thought of as a kind of clock.
Cosmology
Main article: Heat death of the universe

Since a finite universe is an isolated system, the Second Law of Thermodynamics states that its total entropy is constantly increasing. It has been speculated, since the 19th century, that the universe is fated to a heat death in which all the energy ends up as a homogeneous distribution of thermal energy, so that no more work can be extracted from any source.

If the universe can be considered to have generally increasing entropy, then – as Roger Penrose has pointed out – gravity plays an important role in the increase because gravity causes dispersed matter to accumulate into stars, which collapse eventually into black holes. The entropy of a black hole is proportional to the surface area of the black hole's event horizon.[76] Jacob Bekenstein and Stephen Hawking have shown that black holes have the maximum possible entropy of any object of equal size. This makes them likely end points of all entropy-increasing processes, if they are totally effective matter and energy traps.[citation needed] However, the escape of energy from black holes might be possible due to quantum activity, see Hawking radiation. In 2014 Hawking changed his stance on some details, in a paper which largely redefined the event horizons of black holes, positing that black holes do not exist.[77]

The role of entropy in cosmology remains a controversial subject since the time of Ludwig Boltzmann. Recent work has cast some doubt on the heat death hypothesis and the applicability of any simple thermodynamic model to the universe in general. Although entropy does increase in the model of an expanding universe, the maximum possible entropy rises much more rapidly, moving the universe further from the heat death with time, not closer.[78][79][80] This results in an "entropy gap" pushing the system further away from the posited heat death equilibrium.[81] Other complicating factors, such as the energy density of the vacuum and macroscopic quantum effects, are difficult to reconcile with thermodynamical models, making any predictions of large-scale thermodynamics extremely difficult.[82]

The entropy gap is widely believed[citation needed] to have been originally opened up by the early rapid exponential expansion of the universe.
Economics
See also: Nicholas Georgescu-Roegen § The relevance of thermodynamics to economics, and Ecological economics § Methodology

Romanian American economist Nicholas Georgescu-Roegen, a progenitor in economics and a paradigm founder of ecological economics, made extensive use of the entropy concept in his magnum opus on The Entropy Law and the Economic Process.[83] Due to Georgescu-Roegen's work, the laws of thermodynamics now form an integral part of the ecological economics school.[84]:204f [85]:29–35 Although his work was blemished somewhat by mistakes, a full chapter on the economics of Georgescu-Roegen has approvingly been included in one elementary physics textbook on the historical development of thermodynamics.[86]:95–112

In economics, Georgescu-Roegen's work has generated the term 'entropy pessimism'.[87]:116 Since the 1990s, leading ecological economist and steady-state theorist Herman Daly — a student of Georgescu-Roegen — has been the economics profession's most influential proponent of the entropy pessimism position.[88]:545f
See also

    Autocatalytic reactions and order creation
    Brownian ratchet
    Clausius–Duhem inequality
    Configuration entropy
    Departure function
    Enthalpy
    Entropic force
    Entropic value at risk
    Entropy (information theory)
    Entropy (computing)
    Entropy and life
    Entropy (order and disorder)
    Entropy rate
    Entropy production
END"
}
